shiny::runApp('App')
shiny::runApp('App')
runApp('App')
full_schedules <- read.csv("data/full_schedules.csv", header = T, stringsAsFactors = F) %>%
mutate(., date = lubridate::mdy(date)) %>%
filter(., date < '2018-11-30')
getwd()
full_schedules <- read.csv("App/data/full_schedules.csv", header = T, stringsAsFactors = F) %>%
mutate(., date = lubridate::mdy(date)) %>%
filter(., date < '2018-11-30')
full_schedules
runApp('App')
read.csv("data/master.csv", header = T, stringsAsFactors = F) %>%
arrange(.,team)
read.csv("App/data/master.csv", header = T, stringsAsFactors = F) %>%
arrange(.,team)
full_schedules <- read.csv("data/full_schedules.csv", header = T, stringsAsFactors = F) %>%
mutate(., date = lubridate::mdy(date)) %>%
filter(., date < '2018-11-30')
full_schedules <- read.csv("App/data/full_schedules.csv", header = T, stringsAsFactors = F) %>%
mutate(., date = lubridate::mdy(date)) %>%
filter(., date < '2018-11-30')
full_schedules
full_schedules %>% str(.)
library(shiny)
library(tidyverse)
library(lubridate)
runApp('App')
full_schedules %>% str(.)
head(full_schedules)
runApp('App')
filter(full_schedules, team_id == 545)$date
runApp('App')
master_team_list <- read.csv("data/master.csv", header = T, stringsAsFactors = F) %>%
arrange(.,team)
master_team_list <- read.csv("App/data/master.csv", header = T, stringsAsFactors = F) %>%
arrange(.,team)
master_team_list$team
runApp('App')
runApp('App')
filter(master_team_list, team == 545)
master_team_list
filter(master_team_list, team == 545)
master_team_list
master_team_list$team
filter(master_team_list, team == "UNCW")
full_schedules
filter(full_schedules, team_id == 545)
filter(full_schedules, team_id == 545) %>% str(.)
runApp('App')
team_schedule <- filter(full_schedules, team_id == 545)
team_schedule
runApp('App')
runApp('App')
team_schedule
team_schedule %>% pull(date)
team_schedule %>% pull(date) %>% str(.)
team_schedule %>% pull(date) %>% paste(.)
team_schedule %>% pull(date) %>% paste(.) %>% str(.)
runApp('App')
runApp('App')
runApp('App')
View(full_schedules)
?mutate
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
View(full_schedules)
runApp('App')
runApp('App')
View(full_schedules)
full_schedules %>% filter(., opponent == "Duke")
full_schedules %>% filter(., team_id == 545) %>% filter(., opponent == "Duke")
filter(master_team_list, team == 545)$team_id
filter(master_team_list, team == "545")$team_id
filter(master_team_list, team_id == "545")$team_id
filter(master_team_list, team == "545")$team
View(master_team_list)
filter(master_team_list, team_id == "545")$team
filter(master_team_list, team == "Pittsburgh")$team_id
runApp('App')
runApp('App')
runApp('App')
full_schedules <- read.csv("data/full_schedules.csv", header = T, stringsAsFactors = F) %>%
mutate(., date = lubridate::mdy(date)) %>%
filter(., date < '2018-11-30') %>%
group_by(., team_id) %>%
summarise(., ngames = n()) %>%
ungroup(.)
full_schedules <- read.csv("App/data/full_schedules.csv", header = T, stringsAsFactors = F) %>%
mutate(., date = lubridate::mdy(date)) %>%
filter(., date < '2018-11-30') %>%
group_by(., team_id) %>%
summarise(., ngames = n()) %>%
ungroup(.)
View(full_schedules)
plot(density(full_schedules))
plot(density(full_schedules$ngames))
filter(full_schedules, ngames>mean(ngames) + 2*sd(ngames))
filter(master_team_list, team_id == 735)$team
filter(master_team_list, team_id == filter(full_schedules, ngames>mean(ngames) + 2*sd(ngames)))$team
filter(master_team_list, team_id == filter(full_schedules, ngames>mean(ngames) + 2*sd(ngames))$team_id)$team
filter(master_team_list, team_id == filter(full_schedules, ngames>mean(ngames) + 2*sd(ngames)))$team
filter(full_schedules, ngames>mean(ngames) + 2*sd(ngames))
filter(full_schedules, ngames>mean(ngames) + 2*sd(ngames)) %>% pull
filter(full_schedules, ngames>mean(ngames) + 2*sd(ngames)) %>% pull(team_id)
filter(full_schedules, ngames>mean(ngames) + 2*sd(ngames)) %>% pull(team_id) ->> tmp
tmp
filter(master_team_list, team_id %in% tmp)
master_team_list
master_team_list %>% arrange(., unmod_rpi)
master_team_list %>% arrange(., desc(unmod_rpi))
master_team_list %>% arrange(., desc(unmod_rpi)) ->> tmp
tmp
plot(tmp, ngames, unmod_rpi)
left_join(master_team_list, full_schedules)
tmp <- left_join(master_team_list, full_schedules)
tmp
plot(tmp$ngames, tmp$unmod_rpi)
ggplot(tmp$ngames, tmp$unmod_rpi)
lm(unmod_rpi~ngames, tmp)
tst <- lm(unmod_rpi~ngames, tmp)
tst
summary(tst)
shiny::runApp('App')
runApp('App')
?styleEqual
runApp('App')
runApp('App')
runApp('App')
library(DT)
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
#group_by(., team_id) %>%
#mutate(., index = row_number()) %>%
#ungroup(.)
test <- data.frame(test1 = c(1:3), test2 = c(4:6))
test
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
team_schedule %>% datatable(.)
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
View(master_team_list)
win_pct <- function(team_id, game_to_replace, date_of_game_to_replace, new_game){
}
win_pct <- function(team_id){
}
tst <- filter(full_schedules, team_id == c(545,7,8)))
tst <- filter(full_schedules, team_id == c(545,7,8))
x <- 1:100
filter(x, rep(1,3))
filter(x, rep(1,3), sides = 1)
shiny::runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
master_team_list$team
runApp('App')
View(team_schedule)
filter(team_schedule, date == "2018-09-21" & team == "Virgina Tech")
filter(team_schedule, date == "2018-09-21" && team == "Virgina Tech")
filter(team_schedule, date == "2018-09-21"
)
filter(team_schedule, date == "2018-09-21")
filter(team_schedule, opponent == "Virgina Tech")
team_schedule
filter(team_schedule, team_id == 545)
filter(team_schedule, 545)
filter(team_schedule, 545 == team_id)
filter(team_schedule, team_id == "545")
shiny::runApp('App')
shiny::runApp('App')
shiny::runApp('App')
full_schedules <- read.csv("data/full_schedules.csv", header = T, stringsAsFactors = F) %>%
mutate(., date = lubridate::mdy(date)) %>%
filter(., date < '2018-11-30')
full_schedules <- read.csv("App/data/full_schedules.csv", header = T, stringsAsFactors = F) %>%
mutate(., date = lubridate::mdy(date)) %>%
filter(., date < '2018-11-30')
View(full_schedules)
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
shiny::runApp('App')
runApp('App')
library(shiny); runApp('App/app_gibbs.R')
shiny::runApp('App')
runApp('App/app_gibbs.R')
master_team_list <- read.csv("./data/master.csv", header = T, stringsAsFactors = F) %>%
arrange(., team)
full_schedules <- read.csv("./data/full_schedules.csv", header = T, stringsAsFactors = F) %>%
mutate(., date_str = date,
date = mdy(date),
team_id = as.integer(team_id)) %>%
select(., team_id, org_id, date_str, date, opponent, location, result, score,
everything()) %>%
filter(., date < '2018-11-30')
master_team_list <- read.csv("App/data/master.csv", header = T, stringsAsFactors = F) %>%
arrange(., team)
full_schedules <- read.csv("App/data/full_schedules.csv", header = T, stringsAsFactors = F) %>%
mutate(., date_str = date,
date = mdy(date),
team_id = as.integer(team_id)) %>%
select(., team_id, org_id, date_str, date, opponent, location, result, score,
everything()) %>%
filter(., date < '2018-11-30')
runApp('App/app_gibbs.R')
schedule_minus_game <- full_schedules %>%
filter(., team_id == "156",
!(opponent == "LSU"))# & date == date_of_game_to_replace))
View(schedule_minus_game)
for (row in schedule_minus_game) {
print(row)
}
for (i in seq(from = 1, to = nrow(schedule_minus_game))) {
print(schedule_minus_game[[i]])
}
View(schedule_minus_game)
for (i in seq(from = 1, to = nrow(schedule_minus_game))) {
schedule_minus_game[[i]]
}
for (i in seq(from = 1, to = nrow(schedule_minus_game))) {
schedule_minus_game[i]
}
for (i in seq(from = 1, to = nrow(schedule_minus_game))) {
schedule_minus_game[[i]]
}
schedule_minus_game[[1]]
schedule_minus_game[i][1]
schedule_minus_game[i]
schedule_minus_game[1][1]
schedule_minus_game[1][]
schedule_minus_game[][1]
schedule_minus_game[1,1]
schedule_minus_game[1,]
for (i in seq(from = 1, to = nrow(schedule_minus_game))) {
schedule_minus_game[i,]
}
for (i in seq(from = 1, to = nrow(schedule_minus_game))) {
print(schedule_minus_game[i,])
}
opp_schedules <- full_schedules %>%
filter(., team_id == opponents,
!(org_id == "156"))
opponents <- schedule_minus_game$org_id
opp_schedules <- full_schedules %>%
filter(., team_id == opponents,
!(org_id == "156"))
View(opp_schedules)
View(opp_schedules)
for ( i in opponents){
opp_schedules.append(full_schedules %>%
filter(., team_id == i,
!(org_id == "156")))
}
for ( i in opponents){
opp_schedules <- full_schedules %>%
filter(., team_id == i,
!(org_id == "156"))
}
opp_schedules <- full_schedules %>%
filter(., team_id %in% opponents,
!(org_id == "156"))
opp_schedules
opp_wl <- (opp_schedules %>%
count(., result = "W"))/(opp_schedules %>%
count(., result = "W" | result = "L"))
opp_wl <- (opp_schedules %>%
count(., result == "W"))/(opp_schedules %>%
count(., result == "W" | result == "L"))
opp_wl <- (opp_schedules %>%
count(., result == "W"))#/(opp_schedules %>%
#   count(., result == "W" | result == "L"))
opp_wl
#   count(., result == "W" | result == "L"))
opp_wl[2]/(opp_wl[1]+opp_wl[2]
#   count(., result == "W" | result == "L"))
opp_wl[2]/(opp_wl[1]+opp_wl[2]
)
opp_wl[2]/(opp_wl[1]+opp_wl[2])
opp_wl[,2]/(opp_wl[,1]+opp_wl[,2])
opp_wl
opp_wl <- (opp_schedules %>%
count(., result == "W"))%>% uncount()#/(opp_schedules %>%
opp_wl <- (opp_schedules %>%
count(., result == "W"))%>% uncount(.)#/(opp_schedules %>%
opp_wl <- (opp_schedules$result == "W")
opp_wl
mean(opp_wl)
runApp('App/app_gibbs.R')
runApp('App/app_gibbs.R')
runApp('App/app_gibbs.R')
runApp('App/app_gibbs.R')
runApp('App/app_gibbs.R')
